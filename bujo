#!/bin/bash
#===============================================================================
#
#          FILE: bujo
#
#         USAGE: bujo
#
#   DESCRIPTION: Bash Script for a digital Bullet Journal
#                Script Bash para um Bullet Journal digital
#
#       OPTIONS: -h for help
#                -h para ajuda
#  REQUIREMENTS: bash, nano
#          BUGS: n/a
#         NOTES: n/a
#        AUTHOR: marcelositr - marcelost@riseup.net
#       CREATED: 2024/05/01
#       VERSION: 0.01
#      REVISION: n/a
#       CREDITS: file bujo.nanorc by nicholai.best@gmail.com
#
#===============================================================================

# Constants
# Constantes

TODO_FILE="$HOME/.bujo/todo.bujo"
DAILY_FILE="$HOME/.bujo/daily.bujo"
TEMP_FILE="/tmp/today.bujo"
MIGRATION_FILE="/tmp/Migration.bujo"

# Functions
# Funções

# Creates a temporary example file to demonstrate Bujo syntax
# Cria um arquivo de exemplo temporário para demonstrar a sintaxe do Bujo

create_example_file() {
    cat << EOF > /tmp/example.bujo
--------------------------------------------------------------------------------
		Bujo arquivo de demonstração
--------------------------------------------------------------------------------
Este é um arquivo de exemplo para o formato de bullet journal  para  nano.  Este
exemplo é um arquivo temporário e não será alterado,  então  sinta-se à  vontade
para experimentar.  Na  próxima  vez  que  'bujo -x'  for  executado,  todas  as
informações encontradas aqui serão as mesmas.

Tentou os seguintes exercícios onde você vê: "---EXPERIMENTE---"

--------------------------------------------------------------------------------
		Visão geral

Em um bullet journal, um símbolo  na  frente  da  linha  indica  o  que  é  para
facilitar a leitura.  A  diferença  nos  arquivos  '.bujo'  é  que  eles  também
possuem código de cores. Alterar o símbolo irá tornar rápido e fácil verificar o
que você fez e o que você deixou para fazer.  Usar o  comando  'bujo'  lhe  dará
acesso à lista de tarefas principal,  mas  qualquer  arquivo  que  use  o  .bujo
extensão seguirá a maioria das regras que você verá abaixo.

--------------------------------------------------------------------------------
		Tarefas

Existem 4 tipos de tarefas:
1)! Tarefas importantes
    Esta designação é para coisas que precisam ser feitas o mais rápido possível,
    se for imprescindível.

2)* Tarefas normais
    Para qualquer coisa que precise ser feita nos próximos dias.

3)*l tarefas de baixa prioridade Isso é para coisas que não precisam ser  feitas
    imediatamente, mas você ainda precisa fazer acontecer. Se você puder colocar
    fora por alguns dias ou uma semana, use este.

4)? Ideia ou exploratória
    Estas não são necessariamente tarefas, talvez uma ideia  para  a  qual  você
    queira voltar mais tarde, ou algo que você queira verificar outra hora  como
    um podcast sobre o qual alguém lhe contou ou uma música que  você  ouviu  no
    rádio, ou um projeto para o trabalho que seria bom durante  algum  tempo  de
    inatividade.

---EXPERIMENTE---
-Código de cores para as seguintes tarefas

Faça de mim uma tarefa normal.
Faça-me importante, isso você quer cuidar em breve!
Eu sou uma ideia... leia-me mais tarde
Eu não sou uma tarefa importante

Há também uma cor de reunião usando o 'M' no início
de uma linha com ou sem data, mais sobre isso depois...
M 01-01-2020 Café com o Dave
M Café com o Dave

--------------------------------------------------------------------------------
		Concluindo ou Cancelando tarefas

Quando você concluir uma tarefa, simplesmente coloque um 'X' na frente da  linha
Conclua as tarefas concluídas

---EXPERIMENTE---
X * tarefa concluída
* complete-me e eu fico cinza e não chamo atenção para mim
X * exemplo de tarefa concluída
! Complete-me também!

Se uma tarefa  ou  evento  não  acontecer  ou  não  for  necessário,  você  pode
cancelá-lo. Use "C" para mostrar que uma tarefa foi cancelada.  Coloque um "CX"
na frente da linha para vê-la desaparecer.

---EXPERIMENTE---
* Eu não preciso ser feito, cancele-me e veja o que acontece!

A linha acima desaparece, mas não é excluída, apenas oculta.  Se  você  precisar
lê-la, exclua o 'X' para revelá-la.

---EXPERIMENTE---
CX * Nada muito importante, mas agora você sabe e eu não era uma distração

--------------------------------------------------------------------------------
		Manuseio de e-mail

bujo tem um sistema de codificação para e-mails para ver o que você respondeu  e
o que você precisa concluir e quem você está esperando que responda.  Isso  pode
ser muito útil se você enviar muitos e-mails e estiver esperando por respostas.

Funciona nas seguintes 3 etapas:

Etapa 1. E-mail precisa ser composto
É assim que você denota que precisa enviar um e-mail para alguém Coloque o  nome
primeiro com o sinal "arroba", o verde permite que você saiba que é  um  e-mail.
Coloque qualquer tarefa depois disso, pode ser de alta prioridade ou normal.

@JohnD * Você tem uvas?
ou
@JohnD ! Você tem uvas?!

Etapa 2. Aguardando uma resposta

Quando você enviar o email, use 'X' apenas na  tarefa.  Este  irá  acinzentar  a
tarefa, para que você saiba que ela foi feita, mas quando você olhar para trás e
você vir um destinatário verde, você sabe que eles não responderam a VOCÊ.
Ex2. @JohnD X * Você tem uvas?

Etapa 3. E-mail concluído

Depois de ter sua resposta, você pode acinzentar tudo. Certifique-se  de  deixar
uma nota de qual foi a resposta
Ex3. X @JohnD * Você tem uvas? - ele não tem

---EXPERIMENTE---
Edite abaixo para mostrar que  você  precisa  enviar  um  e-mail  para  Nancy  e
perguntar   sobre   laranjas.   Depois  de   editá-lo,  veja  como  ele  comenta
@Nome *conteúdo do email

--------------------------------------------------------------------------------
		Migração

Migração é como você acompanha o que fez no dia-a-dia.

Use '>>' para mostrar que uma tarefa não foi cancelada, mas foi  movida  para  o
dia seguinte. Isso parecerá cinza como se estivesse concluído ou cancelado  para
mostrar que você não precisa realizar uma ação no item.

Migre esta tarefa

---EXPERIMENTE---
* migre-me!
>> * tarefa migrada

As tarefas que são migradas ficam cinzas, você ainda pode ver o que  você  havia
planejado, mas elas não se destacarão.  A  migração  é  importante  porque  pode
mostrar prioridade e manter as coisas importantes na vanguarda  da  atenção.  Se
as tarefas forem migradas mais de algumas vezes,  provavelmente  não  devem  ser
rotuladas como ! alta prioridade

Você também pode delegar tarefas a outra pessoa.
<<John D<< * exemplo delegado a John
Marque como concluído quando eles terminarem.
X <<John D<< *exemplo delegado a John

---EXPERIMENTE---
Atribua isso a Jamie e veja mudar
* Esta tarefa deve ser feita por Jamie

--------------------------------------------------------------------------------
		Comece um novo dia

A função 'novo dia' ou 'bujo -n' é importante para gerenciar projetos  de  longo
prazo.  Executar um novo dia faz três coisas.

1) Ele adiciona um carimbo de data na parte inferior do seu diário, dessa  forma
você sabe que está trabalhando em tarefas em uma data  específica  olhando  para
trás

2) Ele migra suas tarefas antigas para frente.  Quando você inicia um 'novo dia'
você verá uma lista de tudo incompleto para que você possa revisar o que precisa
fazer no dia. Depois de iniciar um novo dia, você precisará  marcar  as  tarefas
acima como migradas para que você saiba que as adiou por um dia.

Apenas algumas tarefas serão migradas para frente, bujo  mostrará  um  lista  de
quaisquer tarefas que sejam deixadas incompletas se forem:
* tarefas normais
e ! tarefas importantes

Essas tarefas não são copiadas para frente:
*l baixa prioridade
e ?: explorar

3) Por último, Bujo adicionará suas "Tarefas diárias" à  sua  lista.  Estas  são
tarefas que você precisa fazer todos os  dias.  A  lista  pode  ser  editada  em
"~./bujo/daily.bujo"

--------------------------------------------------------------------------------
		Agendamento e Reuniões

Agendar tarefas é bom quando você tem coisas que não precisam atenção  até  mais
tarde.    Marque    a    data    na   frente   da   tarefa   usando   usando   o
formato >>>DD/MM/AAAA>>>.
>>>01/05/2024>>> * Isso não precisa ser feito por enquanto!

Isso irá acinzentar a tarefa, mas mostrar que ela está por vir em algum momento.
Na data listada, a tarefa será copiada para sua lista de migração quando você
iniciar um 'novo dia'

---EXPERIMENTE---
Tente migrar isso para a data de amanhã.
* Eu preciso ser feito no natal


A reunião também pode ser migrada em uma data  específica  usando  este  sintaxe
semelhante:
M 19/02/2021 Clube da Luta

Isso irá copiar para frente na data listada,  mas  você  ainda  pode  fazer  uma
reunião no dia sem data.
M Clube da Luta

NOTA: Se a data não estiver em DD/MM/AAAA,
nunca avançará
--------------------------------------------------------------------------------

Agora que você concluiu o tutorial, execute para começar a listar!
EOF
}

# Displays the help text
# Exibe o texto de ajuda

show_help() {
    cat << EOF
Uso: bujo.sh [OPÇÃO]
use sem opção para abrir o diário

 -n    começar novo dia e migração
 -M    migrar todas as tarefas
 -s    exibir resumo
 -a    exibir todas as tarefas
 -i    exibir tarefas importantes
 -t    exibir tarefas normais
 -l    exibir e migrar tarefas de baixa prioridade
 -m    exibir reuniões
 -E    exibir itens exploratórios
 -e    exibir emails
 -d    editar tarefas diárias
 -x    abrir tutorial de exemplo
 -b    bujo -b "tarefa" adiciona tarefa sem abrir nano
 -h    ajuda
EOF
}

start_new_day() {
    echo "Iniciando novo dia..."
    migrate_tasks
    add_daily_tasks
    open_todo_file
}

# Generates the migration file
# Gera o arquivo de migração

migrate_tasks() {
    echo "Migrando tarefas não concluídas..."
    sleep 0.2
    {
        echo "# === Itens migrados ==="
        echo "# Editar ou remover item que você precisa alterar"
        grep '^* ' "$TODO_FILE" | sort
        grep '^@'  "$TODO_FILE" | sort
        grep "^M $(date +%d/%m/%Y)" "$TODO_FILE" | sort
        grep ">>>$(date +%d/%m/%Y)>>>" "$TODO_FILE" | sort
        if grep -q '^! ' "$TODO_FILE"; then
            echo "! --- Itens importantes deixados na lista --- !!!(Exclua-me)"
            grep '^! ' "$TODO_FILE" | sort
        fi
    } >> "$MIGRATION_FILE"

    nano "$MIGRATION_FILE"

# Marks tasks as migrated
# Marca tarefas como migradas

    mark_tasks_as_migrated

# Adds new date and migrated items to the main file
# Adiciona nova data e itens migrados ao arquivo principal

    {
        echo "===$(date +%d/%m/%Y)==="
        grep -vE "^#" "$MIGRATION_FILE"
    } >> "$TODO_FILE"

    rm "$MIGRATION_FILE"
}

mark_tasks_as_migrated() {
    sed -i 's/^* />>* /' "$TODO_FILE"
    sed -i 's/^! />>! /' "$TODO_FILE"
    sed -i 's/^@/>>@/' "$TODO_FILE"
}

add_daily_tasks() {
    grep -vE "^#" "$DAILY_FILE" >> "$TODO_FILE"
}

print_all_tasks() {
    echo "Tarefas Importantes:"
    tput setaf 1; tput bold
    grep '^! ' "$TODO_FILE"; echo
    tput setaf 3
    echo "Tarefas:"
    grep '^* ' "$TODO_FILE"; echo
    tput setaf 5
    echo "Reuniões:"
    grep '^M' "$TODO_FILE" | sort; echo
    tput setaf 7; tput sgr0
    echo "Baixa Prioridade:"
    grep '^*l ' "$TODO_FILE"; echo
    echo "Tarefas Futuras:"
    grep "^>>>" "$TODO_FILE"
}

print_summary() {
    echo "Resumo $(date +%d/%m/%Y):"
    print_meetings_for_today
    echo
    tput setaf 1; tput bold
    echo "Tarefas importantes e devidas:"
    grep ">>>$(date +%d/%m/%Y)>>>" "$TODO_FILE"
    grep ">>>$(date +%d/%m/%Y --date='1 day')>>>" "$TODO_FILE"
    grep ">>>$(date +%d/%m/%Y --date='2 day')>>>" "$TODO_FILE"
    grep ">>>$(date +%d/%m/%Y --date='3 day')>>>" "$TODO_FILE"
    grep "^! " "$TODO_FILE"
    tput setaf 7; tput sgr0
    echo "Outro:"
    echo "$(grep -c '^* ' "$TODO_FILE") tarefa(s)"
    echo "$(grep -c '^*l ' "$TODO_FILE") baixa prioridade"
    echo
    echo "Reuniões + 7 dias:"
    for i in {1..7}; do
        grep "^M $(date +%d/%m/%Y --date="${i} day")" "$TODO_FILE"
    done
}

print_meetings_for_today() {
    if grep -q "^M $(date +%d/%m/%Y)" "$TODO_FILE"; then
        echo "Reuniões:"
        grep "^M $(date +%d/%m/%Y)" "$TODO_FILE"
    else
        echo "Nenhuma reunião hoje."
    fi
}

# Migrates all pending tasks
# Migra todas as tarefas pendentes

migrate_all_tasks() {
    tac "$TODO_FILE" | awk '!flag; /===/{flag = 1};' | tac > "$TEMP_FILE"

    {
        grep '^! '  "$TEMP_FILE" | sort
        grep '^* '  "$TEMP_FILE" | sort
        grep '^@'   "$TEMP_FILE" | sort
        grep '^M '  "$TEMP_FILE" | sort
        grep "^>>>" "$TEMP_FILE" | sort
    } >> "/tmp/today1.bujo"

    mark_tasks_as_migrated
    echo '====classificado===' >> "$TEMP_FILE"
    cat "/tmp/today1.bujo" >> "$TEMP_FILE"

    tac "$TODO_FILE" | sed '1,/===/d' | tac > "/tmp/tmp1.bujo"
    cat "/tmp/tmp1.bujo" > "$TODO_FILE"
    cat "$TEMP_FILE" >> "$TODO_FILE"

    rm "$TEMP_FILE" "/tmp/today1.bujo" "/tmp/tmp1.bujo"
    migrate_low_priority_and_exploratory_tasks
}

migrate_low_priority_and_exploratory_tasks() {
    grep '^*l ' "$TODO_FILE" | sort > "/tmp/bujotmp"
    grep '^? ' "$TODO_FILE" | sort >> "/tmp/bujotmp"
    sed -i 's/^*l />>*l /' "$TODO_FILE"
    sed -i 's/^? />>? /' "$TODO_FILE"
    cat "/tmp/bujotmp" >> "$TODO_FILE"
    rm "/tmp/bujotmp"
}

open_todo_file() {
    nano +9999 "$TODO_FILE"
}

# Calls the main function to start the script
# Chama a função principal para iniciar o script

if [ -n "$1" ]; then
    while getopts "baitlnEmMxHdes" opt; do
        case $opt in
            n) start_new_day ;;
            b) echo "$2" >> "$TODO_FILE" ;;
            i) grep '^! ' "$TODO_FILE" | sort ;;
            t) grep '^* ' "$TODO_FILE" | sort ;;
            l) 
                grep '^*l ' "$TODO_FILE" | sort
                migrate_low_priority_and_exploratory_tasks
                ;;
            m) grep '^M ' "$TODO_FILE" | sort ;;
            e) grep '^@' "$TODO_FILE" | sort ;;
            E) grep '^?' "$TODO_FILE" | sort ;;
            a) print_all_tasks ;;
            H) open_todo_file ;;
            d) nano "$DAILY_FILE" ;;
            x) create_example_file; nano /tmp/example.bujo; rm /tmp/example.bujo ;;
            s) print_summary ;;
            M) migrate_all_tasks ;;
            *) show_help ;;
        esac
    done
else
    nano +9999 "$TODO_FILE"
fi
