#!/bin/bash
#===============================================================================
#
#          FILE: bujo
#
#         USAGE: bujo
#
#   DESCRIPTION: Este é um script Bash que implementa um Bullet Journal digital.
#                Ele usa símbolos simples para categorizar itens em  uma  lista,
#                como  tarefas  importantes,  normais,  de   baixa   prioridade,
#                reuniões e e-mails. O  script  oferece  opções  para  editar  o
#                Bullet Journal, começar um  novo  dia,  exibir  um  resumo  das
#                tarefas pendentes e migrar tarefas para o próximo  dia.  É  uma
#                ferramenta simples e útil para organização pessoal.
#
#       OPTIONS: -h para ajuda
#  REQUIREMENTS: bash, nano
#          BUGS: n/a
#         NOTES: n/a
#        AUTHOR: marcelositr - marcelost@riseup.net
#       CREATED: 01/05/2024
#       VERSION: 0.01
#      REVISION: n/a
#       CREDITS: nicholai.best@gmail.com
#
#===============================================================================

make_example_file(){
    # Cria um arquivo em /tmp para edição que contém exemplos básicos
    # da sintaxe bujo
    cat << eof > /tmp/example.bujo
--------------------------------------------------------------------------------
		Bujo arquivo de demonstração
--------------------------------------------------------------------------------
Este é um arquivo de exemplo para o formato de bullet journal  para  nano.  Este
exemplo é um arquivo temporário e não será alterado,  então  sinta-se à  vontade
para experimentar.  Na  próxima  vez  que  'bujo -x'  for  executado,  todas  as
informações encontradas aqui serão as mesmas.  

Tentou os seguintes exercícios onde você vê: "---EXPERIMENTE---"

--------------------------------------------------------------------------------
		Visão geral

Em um bullet journal, um símbolo  na  frente  da  linha  indica  o  que  é  para
facilitar a leitura.  A  diferença  nos  arquivos  '.bujo'  é  que  eles  também
possuem código de cores. Alterar o símbolo irá tornar rápido e fácil verificar o
que você fez e o que você deixou para fazer.  Usar o  comando  'bujo'  lhe  dará
acesso à lista de tarefas principal,  mas  qualquer  arquivo  que  use  o  .bujo
extensão seguirá a maioria das regras que você verá abaixo.

--------------------------------------------------------------------------------
		Tarefas

Existem 4 tipos de tarefas:
1)! Tarefas importantes
    Esta designação é para coisas que precisam ser feitas o mais rápido possível,
    se for imprescindível.

2)* Tarefas normais
    Para qualquer coisa que precise ser feita nos próximos dias.

3)*l tarefas de baixa prioridade Isso é para coisas que não precisam ser  feitas
    imediatamente, mas você ainda precisa fazer acontecer. Se você puder colocar
    fora por alguns dias ou uma semana, use este.

4)? Ideia ou exploratória
    Estas não são necessariamente tarefas, talvez uma ideia  para  a  qual  você
    queira voltar mais tarde, ou algo que você queira verificar outra hora  como
    um podcast sobre o qual alguém lhe contou ou uma música que  você  ouviu  no
    rádio, ou um projeto para o trabalho que seria bom durante  algum  tempo  de
    inatividade.

---EXPERIMENTE---
-Código de cores para as seguintes tarefas

Faça de mim uma tarefa normal.
Faça-me importante, isso você quer cuidar em breve!
Eu sou uma ideia... leia-me mais tarde
Eu não sou uma tarefa importante

Há também uma cor de reunião usando o 'M' no início 
de uma linha com ou sem data, mais sobre isso depois...
M 01-01-2020 Café com o dave
M Café com o dave

--------------------------------------------------------------------------------
		Concluindo ou Cancelando tarefas

Quando você concluir uma tarefa, simplesmente coloque um 'X' na frente da  linha
Conclua as tarefas concluídas

---EXPERIMENTE---
X * tarefa concluída
* complete-me e eu fico cinza e não chamo atenção para mim
X * exemplo de tarefa concluída
! Complete-me também!

Se uma tarefa  ou  evento  não  acontecer  ou  não  for  necessário,  você  pode
cancelá-lo. Use "CX" para mostrar que uma tarefa foi cancelada.  Coloque um "CX"
na frente da linha para vê-la desaparecer.

---EXPERIMENTE---
* Eu não preciso ser feito, cancele-me e veja o que acontece!

A linha acima desaparece, mas não é excluída, apenas oculta.  Se  você  precisar
lê-la, exclua o 'C' para revelá-la.

---EXPERIMENTE---
CX * Nada muito importante, mas agora você sabe e eu não era uma distração

--------------------------------------------------------------------------------
		Manuseio de e-mail

bujo tem um sistema de codificação para e-mails para ver o que você respondeu  e
o que você precisa concluir e quem você está esperando que responda.  Isso  pode
ser muito útil se você enviar muitos e-mails e estiver esperando por respostas.

Funciona nas seguintes 3 etapas:

Etapa 1. E-mail precisa ser composto
É assim que você denota que precisa enviar um e-mail para alguém Coloque o  nome
primeiro com o sinal "arroba", o verde permite que você saiba que é  um  e-mail.
Coloque qualquer tarefa depois disso, pode ser de alta prioridade ou normal.  

@JohnD * Você tem uvas?
ou
@JohnD ! Você tem uvas?!

Etapa 2. Aguardando uma resposta

Quando você enviar o email, use 'X' apenas na  tarefa.  Este  irá  acinzentar  a
tarefa, para que você saiba que ela foi feita, mas quando você olhar para trás e
você vir um destinatário verde, você sabe que eles não responderam a VOCÊ.
Ex2. @JohnD X * Você tem uvas?

Etapa 3. E-mail concluído

Depois de ter sua resposta, você pode acinzentar tudo. Certifique-se  de  deixar
uma nota de qual foi a resposta
Ex3. X @JohnD * Você tem uvas? - ele não tem

---EXPERIMENTE---
Edite abaixo para mostrar que  você  precisa  enviar  um  e-mail  para  Nancy  e
perguntar sobre laranjas.  Depois de editá-lo, veja  como  ele  comenta  @Nome *
conteúdo do email

--------------------------------------------------------------------------------
		Migração

Migração é como você acompanha o que fez no dia-a-dia.

Use '>>' para mostrar que uma tarefa não foi cancelada, mas foi  movida  para  o
dia seguinte. Isso parecerá cinza como se estivesse concluído ou cancelado  para
mostrar que você não precisa realizar uma ação no item.

Migre esta tarefa

---EXPERIMENTE---
* migre-me!
>> * tarefa migrada

As tarefas que são migradas ficam cinzas, você ainda pode ver o que  você  havia
planejado, mas elas não se destacarão.  A  migração  é  importante  porque  pode
mostrar prioridade e manter as coisas importantes na vanguarda  da  atenção.  Se
as tarefas forem migradas mais de algumas vezes,  provavelmente  não  devem  ser
rotuladas como ! alta prioridade

Você também pode delegar tarefas a outra pessoa.
<<John D<< * exemplo delegado a John
Marque como concluído quando eles terminarem.
X <<John D<< *exemplo delegado a John

---EXPERIMENTE---
Atribua isso a Jamie e veja mudar
* Esta tarefa deve ser feita por Jamie

--------------------------------------------------------------------------------
		Comece um novo dia

A função 'novo dia' ou 'bujo -n' é importante para gerenciar projetos  de  longo
prazo.  Executar um novo dia faz três coisas.

1) Ele adiciona um carimbo de data na parte inferior do seu diário, dessa  forma
você sabe que está trabalhando em tarefas em uma data  específica  olhando  para
trás

2) Ele migra suas tarefas antigas para frente.  Quando você inicia um 'novo dia'
você verá uma lista de tudo incompleto para que você possa revisar o que precisa
fazer no dia. Depois de iniciar um novo dia, você precisará  marcar  as  tarefas
acima como migradas para que você saiba que as adiou por um dia.

Apenas algumas tarefas serão migradas para frente, bujo  mostrará  um  lista  de
quaisquer tarefas que sejam deixadas incompletas se forem:
* tarefas normais
e ! tarefas importantes 

Essas tarefas não são copiadas para frente:
*l baixa prioridade 
e ?: explorar 

3) Por último, Bujo adicionará suas "Tarefas diárias" à  sua  lista.  Estas  são
tarefas que você precisa fazer todos os  dias.  A  lista  pode  ser  editada  em
"~./bujo/daily.bujo"

--------------------------------------------------------------------------------
		Agendamento e Reuniões

Agendar tarefas é bom quando você tem coisas que não precisam atenção  até  mais
tarde.  Marque a data na frente da tarefa usando usando o formato >>>DD-MM-AAAA>>>.
>>>01-05-2024>>> * Isso não precisa ser feito por enquanto!

Isso irá acinzentar a tarefa, mas mostrar que ela está por vir em algum momento.
Na data listada, a tarefa será copiada para sua lista de migração quando você
iniciar um 'novo dia'

---EXPERIMENTE---
Tente migrar isso para a data de amanhã.
* Eu preciso ser feito no natal


A reunião também pode ser migrada em uma data  específica  usando  este  sintaxe
semelhante:
M 19-02-2021 Clube da Luta

Isso irá copiar para frente na data listada,  mas  você  ainda  pode  fazer  uma
reunião no dia sem data.
M Clube da Luta

NOTA: Se a data não estiver em DD-MM-AAAA, 
nunca avançará 
--------------------------------------------------------------------------------

Agora que você concluiu o tutorial, execute para começar a listar!

eof

}

print_help(){
#Imprime texto de ajuda
	echo "Opção inválida -$OPTARG" >&2
    cat << eof
Uso: bujo.sh [OPÇÃO]
use sem opção para abrir o diário

 -n	começar novo dia e migração
 -M	migra todas as tarefas

 -s	exibir resumo
 -a	exibir todas as tarefas

 -i	exibir ! tarefas
 -t	exibir * tarefas
 -l	exibir *l tarefas e migra-las
 -m	exibir reuniões
 -E	exibir coisas para serem exploradas
 -e	exibir emails

 -d	editar tarefas diárias
 -x	abrir tutorial de exemplo
 -b	bujo -b 'tarefa' adiciona tarefa sem abrir nano

 -h	ajuda
eof

}


new_day(){
# Comece um novo dia de trabalho, migre tarefas antigas e adicione diárias
# Copie para frente todas as tarefas não concluídas para o final do arquivo todo
    MASTERLIST="$HOME/.bujo/todo.bujo"
	echo "Iniciando novo dia..."
	sleep .2
	echo "Migrando tarefas não concluídas..."
	sleep .2
	# faça um novo arquivo /tmp/Migration.bujo
	# encontre todas as tarefas importantes em todo, anexe-as a um arquivo tmp
	{
       	echo "# === Itens migrados ==="
       	echo "# Editar ou remover item que você precisa alterar"
    	echo "# Linhas com início '#' são ignoradas"
       	echo "# concluir ou mudar para uma tarefa normal"
    	grep '^* ' "$MASTERLIST" |sort -d
    	grep '^@'  "$MASTERLIST" |sort -d
    	grep "^M $(date +%d-%m-%Y)" "$MASTERLIST" |sort -d
    	grep ">>>$(date +%d-%m-%Y)>>>" "$MASTERLIST" |sort -d
        # se algum item importante nos permitir saber que eles devem ser tratados
        if grep -q  '^! ' "$MASTERLIST" ;then
       	    echo "! --- Itens importantes deixados na lista --- !!!(Exclua-me)"
       	    echo "# Triagem de itens abaixo para normal ou conclusão em breve"
    	    grep '^! ' "$MASTERLIST" |sort -d
        fi

    } >> /tmp/Migration.bujo
	# Abra o arquivo de migração para revisão
	nano /tmp/Migration.bujo

	#migrar todas as tarefas deixadas por fazer antes de hoje, marcá-las com >> para acinzentá-las
	sed -i 's/^* />>* /' "$MASTERLIST"
	sed -i 's/^! />>! /' "$MASTERLIST"
	sed -i 's/^@/>>@/' "$MASTERLIST"

	# Adicionar nova data ao arquivo todo principal
    {
    	echo -n "===$(date +%d-%m-%Y)"
    	echo "==="
    	#Copiar itens migratórios para todo.bujo
    	grep -vE "^#" /tmp/Migration.bujo
    	#copiar tarefas diárias para o arquivo todo
    	grep -vE "^#"  ~/.bujo/daily.bujo
    } >> "$MASTERLIST"
	rm /tmp/Migration.bujo
	#abrir arquivo todo
	nano +9999 "$MASTERLIST"
#	~/.bujo/todo.bujo
}

print_all(){
#Imprime todas as listas
	echo "Tarefas Importantes:"
	tput setaf 1
	tput bold
	grep '^! '  ~/.bujo/todo.bujo
	echo
	tput setaf 3
	echo "Tarefas:"
	grep '^* '  ~/.bujo/todo.bujo
	echo
	tput setaf 5
	echo "Reuniões:"
	grep '^M'  ~/.bujo/todo.bujo|sort
	echo
	tput setaf 7
	tput sgr0
	echo "Baixa Prioridade:"
	grep '^*l '  ~/.bujo/todo.bujo
	echo
	echo "Tarefas Futuras:"
	grep "^>>>" ~/.bujo/todo.bujo
}

print_summary(){
#imprime a visão geral de quantos itens são devidos
	echo "Resumo $(date +%d-%m-%Y):"
    if [ "$(grep -c "^M $(date +%d-%m-%Y)" "$HOME/.bujo/todo.bujo")" -gt 0 ];then
    	echo "Reuniões:"
    	grep "^M $(date +%d-%m-%Y)" ~/.bujo/todo.bujo
    else
        echo Nenhuma reunião hoje.
    fi
    echo
	tput setaf 1
	tput bold
	echo "Tarefas importantes e devidas:"
	grep ">>>$(date +%d-%m-%Y)>>>" ~/.bujo/todo.bujo
	grep ">>>$(date +%d-%m-%Y --date='1 day')>>>" ~/.bujo/todo.bujo
	grep ">>>$(date +%d-%m-%Y --date='2 day')>>>" ~/.bujo/todo.bujo
	grep ">>>$(date +%d-%m-%Y --date='3 day')>>>" ~/.bujo/todo.bujo
	grep "^! " ~/.bujo/todo.bujo
	tput setaf 7
	tput sgr0
    echo "Outro:"
	lines=$(grep -c '^* ' ~/.bujo/todo.bujo |sort -d)
	echo "$lines tarefa(s)"

	lines=$(grep -c '^*l ' ~/.bujo/todo.bujo |sort -d)
	echo "$lines baixa prioridade"
	echo

    echo "Reuniões + 7 dias:"
    grep "^M $(date +%d-%m-%Y --date='1 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='2 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='3 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='4 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='5 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='6 day')" ~/.bujo/todo.bujo
    grep "^M $(date +%d-%m-%Y --date='7 day')" ~/.bujo/todo.bujo

# senão exemplo

}

migrate(){
# empurra tudo para baixo, classificando por tarefa
	# pegue tudo depois do último '==='
	tac ~/.bujo/todo.bujo | awk '!flag; /===/{flag = 1};' | tac > /tmp/today.bujo

	#pegar tarefas e adicionar a um novo arquivo
    {
    	grep '^! '  /tmp/today.bujo |sort -d
    	grep '^* '  /tmp/today.bujo |sort -d
    	grep '^@'   /tmp/today.bujo |sort -d
    	grep '^M ' /tmp/today.bujo |sort -d
    	grep "^>>>" /tmp/today.bujo |sort -d
	} >>/tmp/today1.bujo

	#marcá-los como migrados no primeiro arquivo
	sed -i 's/^* />>* /' /tmp/today.bujo
	sed -i 's/^! />>! /' /tmp/today.bujo
	sed -i 's/^@/>>@/'  /tmp/today.bujo
	sed -i 's/^M/>>M/'  /tmp/today.bujo
	# adicione o arquivo 2 ao arquivo 1 agora ordene por tarefa

	echo '====classificado===' >> /tmp/today.bujo
	cat /tmp/today1.bujo >> /tmp/today.bujo

	# Edite hoje
    # nano /tmp/today.bujo
	# copie apenas tudo antes do último '===' para um arquivo tmp
	# sobrescrever fazendo todo e adicionar dia recém-editado
	tac ~/.bujo/todo.bujo |sed '1,/===/d'|tac > /tmp/tmp1.bujo
	cat /tmp/tmp1.bujo > ~/.bujo/todo.bujo
	cat /tmp/today.bujo >> ~/.bujo/todo.bujo
	#remover arquivos tmp
	rm /tmp/today.bujo
	rm /tmp/today1.bujo
	rm /tmp/tmp1.bujo

	#mover tarefas de baixa prioridade e exploratórias de toda a lista de tarefas para o final da lista
	# colocar em um arquivo tmp
	grep '^*l ' ~/.bujo/todo.bujo|sort -d > /tmp/bujotmp
	grep '^? ' ~/.bujo/todo.bujo|sort -d >> /tmp/bujotmp
	#remover entradas de cima e anexar arquivo tmp à lista de tarefas
	sed -i 's/^*l />>*l /' ~/.bujo/todo.bujo
	sed -i 's/^? />>? /' ~/.bujo/todo.bujo
	cat /tmp/bujotmp >>  ~/.bujo/todo.bujo
	rm /tmp/bujotmp

	nano +9999 ~/.bujo/todo.bujo
}

if [ -n "$1" ]; then
	while getopts "baitlnEmMxHdes" opt; do
	  case $opt in
	    n)
		new_day
	    ;;
	    b)
		echo "$2" >> ~/.bujo/todo.bujo
	    ;;
	    i)
		grep '^! ' ~/.bujo/todo.bujo|sort -d
	    ;;
	    t)
		grep '^* ' ~/.bujo/todo.bujo|sort -d
	    ;;
	    l)
		# imprimir tarefas de baixa prioridade e migrá-las
		grep '^*l ' ~/.bujo/todo.bujo|sort -d
		# colocar em um arquivo tmp
		grep '^*l ' ~/.bujo/todo.bujo|sort -d > /tmp/bujotmp
		#remover entradas de cima e anexar arquivo tmp à lista de tarefas
		sed -i 's/^*l />>*l /' ~/.bujo/todo.bujo
		cat /tmp/bujotmp >>  ~/.bujo/todo.bujo
		rm /tmp/bujotmp
	    ;;
	    m)
		grep '^M ' ~/.bujo/todo.bujo|sort -d
	    ;;
	    e)
		grep '^@' ~/.bujo/todo.bujo|sort -d
	    ;;
	    E)
		grep '^?' ~/.bujo/todo.bujo|sort -d
	    ;;
	    a)
    		print_all
	    ;;
	    H)
    		nano +9999 ~/.bujo/todo.bujo
	    ;;
	    d)
    		echo "Editando Lista Diária..."
    		sleep 1
    		nano  ~/.bujo/daily.bujo
	    ;;
	    x)
    		make_example_file
    		nano /tmp/example.bujo
    		rm /tmp/example.bujo
	    ;;
	    s)
    		print_summary
	    ;;
	    M)
    		migrate
	    ;;
	    \?)
    		print_help
	    ;;
	  esac
	done
else
	# pegue tudo depois do último '===' em todo e coloque em um arquivo, este é o último dia de tarefas
	tac ~/.bujo/todo.bujo | awk '!flag; /===/{flag = 1};' | tac > /tmp/today.bujo
	# Edite 'hoje'
	nano /tmp/today.bujo
	# copie apenas tudo antes do último '===' para um arquivo tmp
	# sobrescrever fazendo todo e adicionar dia recém-editado
	tac ~/.bujo/todo.bujo |sed '1,/===/d'|tac > /tmp/tmp1.bujo
	cat /tmp/tmp1.bujo > ~/.bujo/todo.bujo
	cat /tmp/today.bujo >> ~/.bujo/todo.bujo
	#remover arquivos tmp
	rm /tmp/today.bujo
	rm /tmp/tmp1.bujo
fi

#subcommand=$1; shift  # Remova 'pip' da lista de argumentos
#case "$subcommand" in
# Analise as opções para o subcomando de instalação
#  tarefa)
#	echo -n "* " >> ~/.bujo/todo.bujo # Remova 'instalar' da lista de argumentos
#	echo $@ >> ~/.bujo/todo.bujo # Remova 'instalar' da lista de argumentos
#	echo "Tarefa adicionada:"$@
#	;;
#  resumo)
#	print_summary
#	;;
#  todos)
#	print_all
#	;;
#  novo-dia)
#	new_day
#  ;;
#esac